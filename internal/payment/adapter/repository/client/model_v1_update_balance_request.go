/*
Fast Campus Pay (Wallet API Endpoint)

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
Contact: azwar.nrst@gmail.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package repository

import (
	"encoding/json"
)

// checks if the V1UpdateBalanceRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1UpdateBalanceRequest{}

// V1UpdateBalanceRequest struct for V1UpdateBalanceRequest
type V1UpdateBalanceRequest struct {
	UserId *string  `json:"userId,omitempty"`
	Amount *float64 `json:"amount,omitempty"`
}

// NewV1UpdateBalanceRequest instantiates a new V1UpdateBalanceRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1UpdateBalanceRequest() *V1UpdateBalanceRequest {
	this := V1UpdateBalanceRequest{}
	return &this
}

// NewV1UpdateBalanceRequestWithDefaults instantiates a new V1UpdateBalanceRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1UpdateBalanceRequestWithDefaults() *V1UpdateBalanceRequest {
	this := V1UpdateBalanceRequest{}
	return &this
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *V1UpdateBalanceRequest) GetUserId() string {
	if o == nil || IsNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1UpdateBalanceRequest) GetUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *V1UpdateBalanceRequest) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *V1UpdateBalanceRequest) SetUserId(v string) {
	o.UserId = &v
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *V1UpdateBalanceRequest) GetAmount() float64 {
	if o == nil || IsNil(o.Amount) {
		var ret float64
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1UpdateBalanceRequest) GetAmountOk() (*float64, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *V1UpdateBalanceRequest) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given float64 and assigns it to the Amount field.
func (o *V1UpdateBalanceRequest) SetAmount(v float64) {
	o.Amount = &v
}

func (o V1UpdateBalanceRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1UpdateBalanceRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.UserId) {
		toSerialize["userId"] = o.UserId
	}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	return toSerialize, nil
}

type NullableV1UpdateBalanceRequest struct {
	value *V1UpdateBalanceRequest
	isSet bool
}

func (v NullableV1UpdateBalanceRequest) Get() *V1UpdateBalanceRequest {
	return v.value
}

func (v *NullableV1UpdateBalanceRequest) Set(val *V1UpdateBalanceRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableV1UpdateBalanceRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableV1UpdateBalanceRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1UpdateBalanceRequest(val *V1UpdateBalanceRequest) *NullableV1UpdateBalanceRequest {
	return &NullableV1UpdateBalanceRequest{value: val, isSet: true}
}

func (v NullableV1UpdateBalanceRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1UpdateBalanceRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
